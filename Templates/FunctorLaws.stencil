import XCTest
@testable import FunctionalKit
import SwiftCheck

class FunctorLawsTests: XCTestCase {

{% for type in types.all|annotated:"functor"|annotated:"simpleFunctor" %}
//MARK: {{ type.name }}
// Identity Law
    func test{{ type.name }}Identity() {
        property("{{ type.name }} - Functor Laws - Identity") <- forAll { (x: {% if type.name|contains:"Array" %}ArrayOf<Int>{% else %}Int{% endif %}) in
            return {% if type.name|contains:"Array" %}x.getArray{% else %}{{ type.name }}.unfold({ $0(x) }){% endif %}.map(fidentity) == fidentity({% if type.name|contains:"Array" %}x.getArray{% else %}{{ type.name }}.unfold({ $0(x) }){% endif %})
        }
    }
{% endfor %}

}
